{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gachini/development/codes/phase2/phase-2-hooks-code-challenge-bank-of-flatiron-xevvar/src/components/AccountContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n  function handleAddTransaction(newTransaction) {\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(response => response.json()).then(data => {\n      setFilteredTransactions(prevTransactions => [data, ...prevTransactions]);\n    }).finally(() => {\n      setSearchTerm(\"\");\n    });\n  }\n\n  ;\n\n  function handleSearch(term) {\n    setSearchTerm(term);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch,\n      searchTerm: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAddTransaction: handleAddTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: filteredTransactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountContainer, \"JfUIJUwFVORFFYZemGW4QcqBiAs=\");\n\n_c = AccountContainer;\nexport default AccountContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"sources":["/home/gachini/development/codes/phase2/phase-2-hooks-code-challenge-bank-of-flatiron-xevvar/src/components/AccountContainer.js"],"names":["React","useState","TransactionsList","Search","AddTransactionForm","AccountContainer","searchTerm","setSearchTerm","filteredTransactions","setFilteredTransactions","handleAddTransaction","newTransaction","fetch","method","headers","body","JSON","stringify","then","response","json","data","prevTransactions","finally","handleSearch","term"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAE1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,oBAAD,EAAuBC,uBAAvB,IAAkDR,QAAQ,CAAC,EAAD,CAAhE;;AAEA,WAASS,oBAAT,CAA+BC,cAA/B,EAA+C;AAE7CC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,cAAf;AALoC,KAAvC,CAAL,CAOGO,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACdZ,MAAAA,uBAAuB,CAAEa,gBAAD,IAAsB,CAACD,IAAD,EAAO,GAAGC,gBAAV,CAAvB,CAAvB;AACD,KAVH,EAWGC,OAXH,CAWW,MAAM;AAEbhB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAdH;AAgBD;;AAAA;;AAED,WAASiB,YAAT,CAAuBC,IAAvB,EAA6B;AAC3BlB,IAAAA,aAAa,CAACkB,IAAD,CAAb;AAED;;AAAA;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAED,YAAlB;AAAgC,MAAA,UAAU,EAAElB;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAoB,MAAA,gBAAgB,EAAEI;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,gBAAD;AAAkB,MAAA,YAAY,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArCQH,gB;;KAAAA,gB;AAuCT,eAAeA,gBAAf","sourcesContent":["import React, {useState} from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n\n  const [searchTerm, setSearchTerm] = useState(\"\"); \n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n  function handleAddTransaction (newTransaction) {\n    \n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTransaction),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setFilteredTransactions((prevTransactions) => [data, ...prevTransactions])\n      })\n      .finally(() => {\n       \n        setSearchTerm(\"\");\n      });\n      \n  };\n\n  function handleSearch (term) {\n    setSearchTerm(term);\n    \n  };\n\n  return (\n    <div>\n      <Search onSearch={handleSearch} searchTerm={searchTerm}/>\n      <AddTransactionForm onAddTransaction={handleAddTransaction}/>\n      <TransactionsList transactions={filteredTransactions}/>\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"]},"metadata":{},"sourceType":"module"}